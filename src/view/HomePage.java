/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import com.toedter.calendar.JDateChooser;
import dao.CongViecDAO;
import dao.EmployeeDAO;
import dao.PhanCongDAO;
import dao.PhieuDatTiecCuoiDAO;
import dao.ThamSoDAO;
import database.JDBCUtil;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.CongViec;
import model.EmployeePC;
import model.PhanCong;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.usermodel.CellType;

/**
 *
 * @author macbookpro
 */
public class HomePage extends javax.swing.JInternalFrame {

    private int ngayDatTiec = ThamSoDAO.getInstance().GetThoiGianDatTiec();
    private Date today;
    private Date ngayKetThuc;
    private String maTiecCuoi;
    private Date ngayDT;
    private String maCa;
    private int slBan;
    private int slNhanVienDaChon;
    private DefaultTableModel modelPC;
    private DefaultTableModel modelPCNV;
    private SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    private ArrayList<CongViec> congViecs = new ArrayList<>();
    private ArrayList<EmployeePC> employeePCs = new ArrayList<>();
    private Map<String, String> mapCongViec = new HashMap<>();
    private ArrayList<String> ListMaNV_DPC = new ArrayList<>();
    private ArrayList<String> ListMaNV = new ArrayList<>();
    private ArrayList<String> ListMaNV_Huy = new ArrayList<>();

    private DefaultTableModel defaultTableModel_PhanCong;
    private DefaultTableModel defaultTableModel_SLTiec;
    private SimpleDateFormat formatDay = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form HomePage
     */
    public HomePage() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(-5, -5, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        calendar0.getCalendar().setFirstDayOfWeek(Calendar.MONDAY);
        home.setVisible(true);
        pageXemPhanCong.setVisible(false);
        pagePhanCong.setVisible(false);
        today = calendar0.getDate();
        SetModelTable_PhanCong_Ngay();
        CreateDataTable_PhanCong(0, maCa);
        SetModelTable_SLTiec();
        CreateDataTable_SLTiec();
        CreateBarChart(today);
        Page2();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void Page2() {
        EventQueue.invokeLater(() -> {

            // Đặt bộ lọc cho JDateChooser
            ngayBD.getDateEditor().addPropertyChangeListener("date", evt -> {
                Date selectedDate = (Date) evt.getNewValue();
                if (!isMonday(selectedDate)) {
                    // Nếu ngày không phải là thứ 2, đặt lại ngày thành ngày trước đó
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(selectedDate);
                    calendar.add(Calendar.DATE, -1);
                    ngayBD.setDate(calendar.getTime());
                }
            });
        });

        LocalDate currentDate = LocalDate.now();
        LocalDate mondayOfNextWeek = currentDate.plusWeeks(1).with(DayOfWeek.MONDAY);
        Date ngayBatDau = Date.from(mondayOfNextWeek.atStartOfDay(ZoneId.systemDefault()).toInstant());
        ngayBD.setDate(ngayBatDau);

        LocalDate sunday = mondayOfNextWeek.plusDays(6);
        ngayKetThuc = Date.from(sunday.atStartOfDay(ZoneId.systemDefault()).toInstant());

        String dateString = dateFormat.format(ngayKetThuc);
        ngayKT.setText(dateString);
        
        

      
    }

    private static boolean isMonday(Date date) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
        return dayOfWeek == Calendar.MONDAY;
    }

    private String strNgayCalendar;

    private Date getDayOfWeek(Calendar calendar, int dayOfWeek) {
        calendar.set(Calendar.DAY_OF_WEEK, dayOfWeek);
        return calendar.getTime();
    }

    private String formatDate(Date date, SimpleDateFormat dateFormat) {
        return dateFormat.format(date);
    }

    public void SetModelTable_PhanCong_Ngay() {
        defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
        Table_PhanCong.setFont(new java.awt.Font("Arial", 0, 16));
        Table_PhanCong.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "STT", "Tên nhân viên", "Công việc", "Ca", "Sảnh"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        Table_PhanCong.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        Table_PhanCong.getTableHeader().setFont(new Font("Arial", Font.BOLD, 16));
        Table_PhanCong.getTableHeader().setOpaque(false);
        Table_PhanCong.getTableHeader().setBackground(new Color(243, 246, 249));
        Table_PhanCong.setDefaultEditor(Object.class, null);

    }

    public void SetModelTable_PhanCong_Tuan(String ngayChonn) {
        String ngayChon = strNgayCalendar;
        System.out.println(ngayChon);
        String monDay = formatDate(getDayOfWeek(calendar0.getCalendar(), Calendar.MONDAY), formatDay);
        String sunDay = "";
        String t3 = "";
        String t4 = "";
        String t5 = "";
        String t6 = "";
        String t7 = "";
        try {
            Date date = formatDay.parse(monDay);

            Calendar calendar1 = Calendar.getInstance();
            Calendar calendar2 = Calendar.getInstance();
            Calendar calendar3 = Calendar.getInstance();
            Calendar calendar4 = Calendar.getInstance();
            Calendar calendar5 = Calendar.getInstance();
            Calendar calendar6 = Calendar.getInstance();
            calendar1.setTime(date);
            calendar2.setTime(date);
            calendar3.setTime(date);
            calendar4.setTime(date);
            calendar5.setTime(date);
            calendar6.setTime(date);
            calendar1.add(Calendar.DAY_OF_MONTH, 1);
            calendar2.add(Calendar.DAY_OF_MONTH, 2);
            calendar3.add(Calendar.DAY_OF_MONTH, 3);
            calendar4.add(Calendar.DAY_OF_MONTH, 4);
            calendar5.add(Calendar.DAY_OF_MONTH, 5);
            calendar6.add(Calendar.DAY_OF_MONTH, 6);

            Date resultDate1 = calendar1.getTime();
            Date resultDate2 = calendar2.getTime();
            Date resultDate3 = calendar3.getTime();
            Date resultDate4 = calendar4.getTime();
            Date resultDate5 = calendar5.getTime();
            Date resultDate6 = calendar6.getTime();

            sunDay = formatDay.format(resultDate6);
            t3 = formatDay.format(resultDate1);
            t4 = formatDay.format(resultDate2);
            t5 = formatDay.format(resultDate3);
            t6 = formatDay.format(resultDate4);
            t7 = formatDay.format(resultDate5);

        } catch (Exception e) {
            e.printStackTrace();
        }
//                ArrayList<PhanCong> lstPhanCong = PhanCongDAO.getInstance().SelectAll();
        System.out.print(monDay);
        System.out.print(sunDay);
        defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
        Table_PhanCong.setFont(new java.awt.Font("Arial", 0, 15));
        Table_PhanCong.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "STT", "Tên nhân viên", "Công việc", monDay, t3, t4, t5, t6, t7, sunDay
//            "Tên nhân viên", "Công việc", "t2", "t3", "t4", "t5", "t6", "t7", "sunDay"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
//        Table_PhanCong.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        Table_PhanCong.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(Table_PhanCong);

        Table_PhanCong.getColumnModel().getColumn(0).setPreferredWidth(60);
        Table_PhanCong.getColumnModel().getColumn(1).setPreferredWidth(150);
        Table_PhanCong.getColumnModel().getColumn(2).setPreferredWidth(155);
        Table_PhanCong.getColumnModel().getColumn(3).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(4).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(5).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(6).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(7).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(8).setPreferredWidth(165);
        Table_PhanCong.getColumnModel().getColumn(9).setPreferredWidth(165);

        Table_PhanCong.getTableHeader().setFont(new Font("Arial", Font.BOLD, 15));
        Table_PhanCong.getTableHeader().setOpaque(false);
        Table_PhanCong.getTableHeader().setBackground(new Color(243, 246, 249));
        Table_PhanCong.setDefaultEditor(Object.class, null);

    }

    public void SetModelTable_SLTiec() {
        defaultTableModel_SLTiec = (DefaultTableModel) Table_SLTiec.getModel();
        Table_SLTiec.setFont(new java.awt.Font("Arial", 0, 16));
        Table_SLTiec.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Ca", "Số lượng tiệc cưới"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        Table_SLTiec.getTableHeader().setFont(new Font("Arial", Font.BOLD, 16));
        Table_SLTiec.getTableHeader().setOpaque(false);
        Table_SLTiec.getTableHeader().setBackground(new Color(243, 246, 249));
        Table_SLTiec.setDefaultEditor(Object.class, null);
    }

    public String getData_Ngay(String maNhanVien, String ngay) {
        List<String[]> results1 = new ArrayList<>();
        try {
            Connection con = JDBCUtil.getConnection();

            String sql = "SELECT  nhanvien.maNhanVien, nhanvien.tenNhanVien, CONCAT('full: ', GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', '))"
                    + "FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                    + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi"
                    + " and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and nhanvien.maCongViec = congviec.maCongViec"
                    + " and phieudattieccuoi.ngayDaiTiec = ? and nhanvien.maNhanVien = ? GROUP BY nhanvien.maNhanVien, nhanvien.tenNhanVien HAVING COUNT(*) = 2";

            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, ngay);
            st.setString(2, maNhanVien);
            ResultSet kq = st.executeQuery();
            System.out.println(kq);
            defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
            while (kq.next()) {
                String[] row = {kq.getString("CONCAT('full: ', GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', '))")};
                results1.add(row);
                System.out.println(kq.getString("CONCAT('full: ', GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', '))"));

            }
            JDBCUtil.closeConnection(con);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("loi o day");
        }

        try {
            Connection con = JDBCUtil.getConnection();

            String sql = "SELECT  nhanvien.maNhanVien, nhanvien.tenNhanVien, ca.tenCa, sanh.maSanh, CONCAT(ca.tenCa, ': ', sanh.maSanh) "
                    + "FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                    + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi"
                    + " and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and nhanvien.maCongViec = congviec.maCongViec"
                    + " and phieudattieccuoi.ngayDaiTiec = ? and nhanvien.maNhanVien = ? and nhanvien.maNhanVien not in "
                    + "(SELECT nhanvien.maNhanVien FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                    + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi "
                    + "and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and "
                    + "nhanvien.maCongViec = congviec.maCongViec GROUP BY nhanvien.maNhanVien, nhanvien.tenNhanVien, phieudattieccuoi.ngayDaiTiec HAVING COUNT(*) = 2)";

            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, ngay);
            st.setString(2, maNhanVien);
//                    st.setString(2, sunDay);
            ResultSet kq = st.executeQuery();
//                    defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
            while (kq.next()) {
                String[] row = {kq.getString("CONCAT(ca.tenCa, ': ', sanh.maSanh)")};
                results1.add(row);
//                        System.out.println(kq.getString("maNhanVien") + kq.getString("tenNhanVien") + "         adfadfadfadf");
            }
            JDBCUtil.closeConnection(con);
        } catch (Exception ex) {
            ex.printStackTrace();
            System.out.println("loi o day");
        }

//                for(int i = 0; i < results1.size(); i++)
//                {
//                    defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
//                    defaultTableModel_PhanCong.addRow(results1.get(i));
//                }
        String str = " ";
        if (!results1.isEmpty()) {
            return results1.get(0)[0];
        }

        System.out.println("Chuoi can co: " + str);
        return str;
    }

    public void CreateDataTable_PhanCong(int type, String ngayChon) {
        switch (type) {
            case 0: {
//                defaultTableModel_PhanCong.setRowCount(0);
                int dem = 1;
                SetModelTable_PhanCong_Ngay();

//                String ngayChon = formatDay.format(day.getTime());
                System.out.println("Ngay duoc chon khi phan cong ngay" + ngayChon);
                List<String[]> results1 = new ArrayList<>();
                try {
                    Connection con = JDBCUtil.getConnection();

                    String sql = "SELECT  nhanvien.maNhanVien, nhanvien.tenNhanVien, GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', ')"
                            + "FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                            + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi"
                            + " and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and nhanvien.maCongViec = congviec.maCongViec"
                            + " and phieudattieccuoi.ngayDaiTiec = ? GROUP BY nhanvien.maNhanVien, nhanvien.tenNhanVien HAVING COUNT(*) = 2";

                    PreparedStatement st = con.prepareStatement(sql);
                    st.setString(1, ngayChon);
//                    st.setString(2, sunDay);
                    ResultSet kq = st.executeQuery();
                    System.out.println(kq);
                    defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
                    while (kq.next()) {
                        String[] row = {String.valueOf(dem++), kq.getString("maNhanVien"), kq.getString("tenNhanVien"), "full", kq.getString("GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', ')")};
                        results1.add(row);
                        System.out.println(kq.getString("maNhanVien") + kq.getString("tenNhanVien") + kq.getString("GROUP_CONCAT(phieudattieccuoi.maSanh SEPARATOR ', ')"));

                    }
                    JDBCUtil.closeConnection(con);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                try {
                    Connection con = JDBCUtil.getConnection();

                    String sql = "SELECT  nhanvien.maNhanVien, nhanvien.tenNhanVien, ca.tenCa, sanh.maSanh "
                            + "FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                            + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi"
                            + " and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and nhanvien.maCongViec = congviec.maCongViec"
                            + " and phieudattieccuoi.ngayDaiTiec = ? and nhanvien.maNhanVien not in "
                            + "(SELECT nhanvien.maNhanVien FROM nhanvien, phancong, phieudattieccuoi, ca, congviec, sanh "
                            + "WHERE phancong.maNhanVien = nhanvien.maNhanVien and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi "
                            + "and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh and "
                            + "nhanvien.maCongViec = congviec.maCongViec GROUP BY nhanvien.maNhanVien, nhanvien.tenNhanVien, phieudattieccuoi.ngayDaiTiec HAVING COUNT(*) = 2)";

                    PreparedStatement st = con.prepareStatement(sql);
                    st.setString(1, ngayChon);
//                    st.setString(2, sunDay);
                    ResultSet kq = st.executeQuery();
//                    defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
                    while (kq.next()) {
                        String[] row = {String.valueOf(dem++), kq.getString("maNhanVien"), kq.getString("tenNhanVien"), kq.getString("tenCa"), kq.getString("maSanh")};
                        results1.add(row);
                        System.out.println(kq.getString("maNhanVien") + kq.getString("tenNhanVien") + "         adfadfadfadf");
                    }
                    JDBCUtil.closeConnection(con);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                for (int i = 0; i < results1.size(); i++) {
                    defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
                    defaultTableModel_PhanCong.addRow(results1.get(i));
                }
                break;
            }
            case 1: {
                int dem = 1;
                defaultTableModel_PhanCong.setRowCount(0);
                SetModelTable_PhanCong_Tuan(ngayChon);

//                defaultTableModel_PhanCong.setRowCount(0);
                String strMonDaySunDay = GetMonDaySunDay();
                String[] parts = strMonDaySunDay.split(" ");
                String monDay = parts[0];
                String sunDay = parts[1];
                String t3 = "";
                String t4 = "";
                String t5 = "";
                String t6 = "";
                String t7 = "";
                try {
                    Date date = formatDay.parse(monDay);

                    Calendar calendar1 = Calendar.getInstance();
                    Calendar calendar2 = Calendar.getInstance();
                    Calendar calendar3 = Calendar.getInstance();
                    Calendar calendar4 = Calendar.getInstance();
                    Calendar calendar5 = Calendar.getInstance();
                    Calendar calendar6 = Calendar.getInstance();
                    calendar1.setTime(date);
                    calendar2.setTime(date);
                    calendar3.setTime(date);
                    calendar4.setTime(date);
                    calendar5.setTime(date);
                    calendar6.setTime(date);

                    calendar1.add(Calendar.DAY_OF_MONTH, 1);
                    calendar2.add(Calendar.DAY_OF_MONTH, 2);
                    calendar3.add(Calendar.DAY_OF_MONTH, 3);
                    calendar4.add(Calendar.DAY_OF_MONTH, 4);
                    calendar5.add(Calendar.DAY_OF_MONTH, 5);
                    calendar6.add(Calendar.DAY_OF_MONTH, 6);

                    Date resultDate1 = calendar1.getTime();
                    Date resultDate2 = calendar2.getTime();
                    Date resultDate3 = calendar3.getTime();
                    Date resultDate4 = calendar4.getTime();
                    Date resultDate5 = calendar5.getTime();
                    Date resultDate6 = calendar6.getTime();

                    sunDay = formatDay.format(resultDate6);
                    t3 = formatDay.format(resultDate1);
                    t4 = formatDay.format(resultDate2);
                    t5 = formatDay.format(resultDate3);
                    t6 = formatDay.format(resultDate4);
                    t7 = formatDay.format(resultDate5);

                } catch (Exception e) {
                    e.printStackTrace();
                    System.out.println("loi o day");
                }

//                List<String[]> results1 = new ArrayList<>();
//                List<String[]> results2 = new ArrayList<>();
                try {
                    Connection con = JDBCUtil.getConnection();

                    String sql = "SELECT nhanvien.maNhanVien, nhanvien.tenNhanVien, congviec.tenCongViec "
                            + "FROM phancong, phieudattieccuoi, nhanvien, sanh, ca, congviec WHERE phancong.maNhanVien = nhanvien.maNhanVien "
                            + "and phieudattieccuoi.maTiecCuoi = phancong.maTiecCuoi and phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.maSanh = sanh.maSanh "
                            + "and nhanvien.maCongViec = congviec.maCongViec and phieudattieccuoi.ngayDaiTiec >= ? and phieudattieccuoi.ngayDaiTiec <= ?"
                            + "GROUP BY nhanvien.maNhanVien, nhanvien.tenNhanVien ORDER BY nhanvien.maNhanVien  ASC";

                    PreparedStatement st = con.prepareStatement(sql);
                    st.setString(1, monDay);
                    st.setString(2, sunDay);
                    ResultSet kq = st.executeQuery();
//                    defaultTableModel_PhanCong1 = (DefaultTableModel) Table_PhanCong.getModel();
//                    defaultTableModel_PhanCong1.setRowCount(0);
                    SetModelTable_PhanCong_Tuan(ngayChon);
                    while (kq.next()) {
                        String maNhanVien = kq.getString("maNhanVien");
                        System.out.println("kajdhfkajdfakjdfakd: " + maNhanVien);
                        String t2 = getData_Ngay(maNhanVien, monDay);
                        String thu3 = getData_Ngay(maNhanVien, t3);
                        String thu4 = getData_Ngay(maNhanVien, t4);
                        String thu5 = getData_Ngay(maNhanVien, t5);
                        String thu6 = getData_Ngay(maNhanVien, t6);
                        String thu7 = getData_Ngay(maNhanVien, t7);
                        String cn = getData_Ngay(maNhanVien, sunDay);
                        System.out.println("Chuoi o day t2: " + t2);
                        System.out.println("Chuoi o day t3: " + thu3);
                        System.out.println("Chuoi o day t4: " + thu4);
                        System.out.println("Chuoi o day t5: " + thu5);
                        System.out.println("Chuoi o day t6: " + thu6);
                        System.out.println("Chuoi o day t7: " + thu7);
                        System.out.println("Chuoi o day cn: " + cn);
//                        defaultTableModel_PhanCong.addRow(new Object[] {kq.getString("maNhanVien"), kq.getString("tenCongViec"), "t2", "t3", "t4", "t5", "t6", "t7", "cn"});
                        defaultTableModel_PhanCong = (DefaultTableModel) Table_PhanCong.getModel();
                        defaultTableModel_PhanCong.addRow(new Object[]{dem++, kq.getString("tenNhanVien"), kq.getString("tenCongViec"), t2, thu3, thu4, thu5, thu6, thu7, cn});
                    }
                    Date ngayChonn = calendar0.getDate();
                    String strNgayChon = formatDay.format(ngayChonn);
                    System.out.println("Ngay chọn sau khi xuat bang tuan:" + strNgayChon);
                    JDBCUtil.closeConnection(con);
                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.out.println("loi o day");
                }
                break;
            }
            default:
                throw new AssertionError();
        }
    }
    
    public String GetMonDaySunDay()
    {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.parse(strNgayCalendar, formatter);

        // Tìm ngày thứ 2 trong tuần
        LocalDate monday = date;
        while (monday.getDayOfWeek() != DayOfWeek.MONDAY) {
            monday = monday.minusDays(1);
        }

        // Tìm ngày chủ nhật trong tuần
        LocalDate sunday = date;
        while (sunday.getDayOfWeek() != DayOfWeek.SUNDAY) {
            sunday = sunday.plusDays(1);
        }

        // Định dạng ngày thứ 2 và ngày chủ nhật thành chuỗi "yyyy-MM-dd"
        String monDay = monday.format(formatter);
        String sunDay = sunday.format(formatter);
        return monDay + " " + sunDay;
    }

    public void CreateDataTable_SLTiec() {

        switch (jComboBox2.getSelectedIndex()) {
            case 0: {

                try {
                    Connection con = JDBCUtil.getConnection();

                    String sql = "SELECT ca.tenCa, COUNT(*) FROM phieudattieccuoi, ca WHERE phieudattieccuoi.ngayDaiTiec = ? and phieudattieccuoi.maCa = ca.maCa GROUP BY phieudattieccuoi.ngayDaiTiec, ca.tenCa ";

                    PreparedStatement st = con.prepareStatement(sql);
                    st.setString(1, strNgayCalendar);
                    ResultSet kq = st.executeQuery();
                    System.out.println(strNgayCalendar);
                    SetModelTable_SLTiec();
                    defaultTableModel_SLTiec.setRowCount(0);
                    defaultTableModel_SLTiec = (DefaultTableModel) Table_SLTiec.getModel();
                    while (kq.next()) {
                        String[] row = {kq.getString("tenCa"), kq.getString("COUNT(*)")};
                        //              de          results1.add(row);

                        defaultTableModel_SLTiec.addRow(row);
                        //                System.out.println(kq.getString("CONCAT('full: ', GROUP_CONCAT(phieudattieccuoi.maCa SEPARATOR ', '))"));
                    }
                    jScrollPane2.setVisible(true);
                    JDBCUtil.closeConnection(con);
                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.out.println("loi o day");
                }
                break;
            }
            case 1: {
                String strMonDaySunDay = GetMonDaySunDay();
                String[] parts = strMonDaySunDay.split(" ");
                String monDay = parts[0];
                String sunDay = parts[1];
                System.out.println("Thứ 2: " + monDay + ",     Thứ 6: " + sunDay);
                try {
                    Connection con = JDBCUtil.getConnection();

                    String sql = "SELECT ca.tenCa, COUNT(*) FROM phieudattieccuoi, ca WHERE phieudattieccuoi.maCa = ca.maCa and phieudattieccuoi.ngayDaiTiec >= ? and phieudattieccuoi.ngayDaiTiec<= ? GROUP BY  ca.tenCa ";

                    PreparedStatement st = con.prepareStatement(sql);
                    st.setString(1, monDay);
                    st.setString(2, sunDay);
                    ResultSet kq = st.executeQuery();
                    System.out.println("adfadsf" + strNgayCalendar);

//                    SetModelTable_SLTiec();
                    defaultTableModel_SLTiec.setRowCount(0);
                    defaultTableModel_SLTiec = (DefaultTableModel) Table_SLTiec.getModel();
                    while (kq.next()) {
                        String[] row = {kq.getString("tenCa"), kq.getString("COUNT(*)")};
                        defaultTableModel_SLTiec.addRow(row);
                    }
                    jScrollPane2.setVisible(true);
                    JDBCUtil.closeConnection(con);

                } catch (Exception ex) {
                    ex.printStackTrace();
//                    System.out.println("loi o day");
                }
                break;
            }
            default:
                throw new AssertionError();
        }

    }

    public void CreateBarChart(Date Day) {
        String ngay = formatDay.format(Day);
        String[] parts = ngay.split("-");
        BarChart_HomePage example = new BarChart_HomePage(Integer.parseInt(parts[0]), Integer.parseInt(parts[1]));

        jBarChar.removeAll();
        jBarChar.add(example).setVisible(true);

    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pageXemPhanCong = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ngayBD = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ngayKT = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        btnTraCuu = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnPhanCong = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TablePhanCongTC = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        pagePhanCong = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbNgayDaiTiec = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbCa = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbMaTC = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbMaSanh = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cbxCongViec = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablePhanCongNV = new javax.swing.JTable();
        jPanel25 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lbNhanVienDuocChon = new javax.swing.JLabel();
        lbSoLuongNVcan = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();
        btnXacNhan = new javax.swing.JButton();
        home = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_PhanCong = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jBarChar = new javax.swing.JDesktopPane();
        export = new javax.swing.JLabel();
        calendar0 = new com.toedter.calendar.JCalendar();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_SLTiec = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1170, 730));

        pageXemPhanCong.setBackground(new java.awt.Color(255, 255, 255));
        pageXemPhanCong.setPreferredSize(new java.awt.Dimension(1170, 730));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        ngayBD.setDateFormatString("dd/MM/yyyy");
        ngayBD.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ngayBDPropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel4.setText("Ngày bắt đầu");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(ngayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ngayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel5.setText("Ngày kết thúc");

        ngayKT.setEditable(false);
        ngayKT.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(ngayKT, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ngayKT)
                .addContainerGap())
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        btnTraCuu.setBackground(new java.awt.Color(132, 70, 133));
        btnTraCuu.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnTraCuu.setForeground(new java.awt.Color(255, 255, 255));
        btnTraCuu.setText("Tra cứu");
        btnTraCuu.setPreferredSize(new java.awt.Dimension(100, 40));
        btnTraCuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraCuuActionPerformed(evt);
            }
        });
        jPanel16.add(btnTraCuu);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(69, 96, 134));
        jLabel6.setText("BẢNG TIỆC CƯỚI TRONG TUẦN");

        btnPhanCong.setBackground(new java.awt.Color(99, 122, 48));
        btnPhanCong.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnPhanCong.setForeground(new java.awt.Color(255, 255, 255));
        btnPhanCong.setText("Phân công");
        btnPhanCong.setPreferredSize(new java.awt.Dimension(100, 40));
        btnPhanCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPhanCongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addComponent(btnPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)))
        );

        TablePhanCongTC.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        TablePhanCongTC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Ngày", "Ca", "Mã tiệc cưới", "Mã sảnh", "Số lượng bàn", "Tình trạng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablePhanCongTC.setRowHeight(25);
        jScrollPane3.setViewportView(TablePhanCongTC);
        TablePhanCongTC.getTableHeader().setFont(new Font("Arial", Font.BOLD, 16));
        TablePhanCongTC.getTableHeader().setOpaque(false);
        TablePhanCongTC.getTableHeader().setBackground(new Color(243,246,249));

        jButton3.setBackground(new java.awt.Color(69, 96, 134));
        jButton3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Quay lại");
        jButton3.setPreferredSize(new java.awt.Dimension(100, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pageXemPhanCongLayout = new javax.swing.GroupLayout(pageXemPhanCong);
        pageXemPhanCong.setLayout(pageXemPhanCongLayout);
        pageXemPhanCongLayout.setHorizontalGroup(
            pageXemPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pageXemPhanCongLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(pageXemPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(pageXemPhanCongLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(106, 106, 106))
        );
        pageXemPhanCongLayout.setVerticalGroup(
            pageXemPhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pageXemPhanCongLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pagePhanCong.setBackground(new java.awt.Color(255, 255, 255));
        pagePhanCong.setPreferredSize(new java.awt.Dimension(1170, 730));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setText("Thông tin tiệc cưới");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel8.setText("Ngày đãi tiệc:");

        lbNgayDaiTiec.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbNgayDaiTiec.setText("Ngày đãi tiệc:");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel10.setText("Ca:");

        lbCa.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbCa.setText("Ca:");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel12.setText("Mã tiệc cưới:");

        lbMaTC.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbMaTC.setText("Mã tiệc cưới:");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel14.setText("Mã sảnh:");

        lbMaSanh.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbMaSanh.setText("Mã sảnh:");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(lbNgayDaiTiec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(lbCa)
                        .addGap(154, 154, 154)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(lbMaTC)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(lbMaSanh))))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbNgayDaiTiec)
                    .addComponent(jLabel10)
                    .addComponent(lbCa)
                    .addComponent(jLabel12)
                    .addComponent(lbMaTC)
                    .addComponent(jLabel14)
                    .addComponent(lbMaSanh))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(69, 96, 134));
        jLabel16.setText("BẢNG NHÂN VIÊN");
        jPanel23.add(jLabel16);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel17.setText("Công việc");

        cbxCongViec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCongViecActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jCheckBox1.setText("Chọn nhân viên tự động");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(cbxCongViec, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cbxCongViec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TablePhanCongNV.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        TablePhanCongNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã nhân viên", "Họ tên", "Giới tính", "Loại nhân viên", "Số điện thoại", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablePhanCongNV.setRowHeight(25);
        TablePhanCongNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablePhanCongNVMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TablePhanCongNV);
        TablePhanCongNV.getTableHeader().setFont(new Font("Arial", Font.BOLD, 16));
        TablePhanCongNV.getTableHeader().setOpaque(false);
        TablePhanCongNV.getTableHeader().setBackground(new Color(243,246,249));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel18.setText("Số lượng nhân viên cần:");

        jLabel19.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel19.setText("Số lượng nhân viên đã được chọn:");

        lbNhanVienDuocChon.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbNhanVienDuocChon.setText("Số lượng nhân viên cần:");

        lbSoLuongNVcan.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        lbSoLuongNVcan.setText("Số lượng nhân viên cần:");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSoLuongNVcan)
                    .addComponent(lbNhanVienDuocChon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lbSoLuongNVcan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lbNhanVienDuocChon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnQuayLai.setBackground(new java.awt.Color(69, 96, 134));
        btnQuayLai.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnQuayLai.setForeground(new java.awt.Color(255, 255, 255));
        btnQuayLai.setText("Quay lại");
        btnQuayLai.setPreferredSize(new java.awt.Dimension(100, 40));
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        btnXacNhan.setBackground(new java.awt.Color(132, 70, 133));
        btnXacNhan.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setText("Xác nhận");
        btnXacNhan.setPreferredSize(new java.awt.Dimension(100, 40));
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pagePhanCongLayout = new javax.swing.GroupLayout(pagePhanCong);
        pagePhanCong.setLayout(pagePhanCongLayout);
        pagePhanCongLayout.setHorizontalGroup(
            pagePhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagePhanCongLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(pagePhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(pagePhanCongLayout.createSequentialGroup()
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(106, 106, 106))
                    .addGroup(pagePhanCongLayout.createSequentialGroup()
                        .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106))
        );
        pagePhanCongLayout.setVerticalGroup(
            pagePhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagePhanCongLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pagePhanCongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setPreferredSize(new java.awt.Dimension(1170, 730));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel2.setText("Lịch phân công công việc");

        jScrollPane1.setViewportView(null);

        Table_PhanCong.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        Table_PhanCong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table_PhanCong.setToolTipText("");
        Table_PhanCong.setRowHeight(25);
        jScrollPane1.setViewportView(Table_PhanCong);

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngày", "Tuần" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setToolTipText("");

        jBarChar.setPreferredSize(new java.awt.Dimension(729, 232));

        javax.swing.GroupLayout jBarCharLayout = new javax.swing.GroupLayout(jBarChar);
        jBarChar.setLayout(jBarCharLayout);
        jBarCharLayout.setHorizontalGroup(
            jBarCharLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 723, Short.MAX_VALUE)
        );
        jBarCharLayout.setVerticalGroup(
            jBarCharLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
        );

        export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/import.png"))); // NOI18N
        export.setToolTipText("");
        export.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exportMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(253, 253, 253)
                            .addComponent(export)))
                    .addComponent(jBarChar, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(export)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jBarChar, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        calendar0.setBackground(new java.awt.Color(255, 255, 255));
        calendar0.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                calendar0AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        calendar0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendar0PropertyChange(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        Table_SLTiec.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        Table_SLTiec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ca", "Số lượng tiệc cưới"
            }
        ));
        Table_SLTiec.setRowHeight(25);
        jScrollPane2.setViewportView(Table_SLTiec);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setText("Số lượng tiệc trong ");

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngày", "Tuần" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jComboBox2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox2PropertyChange(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel23)
                        .addGap(0, 31, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/phancong.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendar0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11)))
                .addContainerGap())
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeLayout.createSequentialGroup()
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, homeLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1))
                    .addGroup(homeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(calendar0, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1170, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pageXemPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pagePhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, 1158, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 742, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addComponent(pageXemPhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 6, Short.MAX_VALUE)
                    .addComponent(pagePhanCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 6, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            int slPhaiChon = Integer.parseInt(lbSoLuongNVcan.getText());
            int slDaChon = Integer.parseInt(lbNhanVienDuocChon.getText());
            int sl = slPhaiChon - slDaChon;
            String maCV = mapCongViec.get(cbxCongViec.getSelectedItem().toString());
            System.out.println(slPhaiChon + " " + slDaChon + " " + sl + " " + slNhanVienDaChon);
            for (EmployeePC x : employeePCs) {
                if (!x.isChon() && x.getMaCongViec().equals(maCV)) {
                    x.setChon(true);
                    sl--;
                    slNhanVienDaChon++;
                    ListMaNV.add(x.getMaNhanVien());
                    System.out.println(sl + " " + slNhanVienDaChon);
                }
                if (sl == 0) {
                    break;
                }
            }

            slNhanVienDaChon = 0;
            CreateTablePC();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    private int i = 0;

    public void Message(String message, int messageType) {
        JOptionPane jOptionPane = new JOptionPane(message, messageType);
        JDialog dialog = jOptionPane.createDialog(null, "Message");
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    }
    private void ngayBDPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ngayBDPropertyChange
        // TODO add your handling code here:
        Date moday = ngayBD.getDate();

        LocalDate mondayOfWeek = moday.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        LocalDate sunday = mondayOfWeek.plusDays(6);
        ngayKetThuc = Date.from(sunday.atStartOfDay(ZoneId.systemDefault()).toInstant());
        String dateString = dateFormat.format(ngayKetThuc);

        long daysBetween = ChronoUnit.DAYS.between(LocalDate.now(), sunday);
        ngayKT.setText(dateString);

//        if (daysBetween <= ngayDatTiec) {
//            ngayKT.setText(dateString);
//        } 
//        else 
//        {
//            Message("Lỗi!Thời gian chưa được phép phân công.", JOptionPane.WARNING_MESSAGE);
//            ngayKT.setText("");
//            ngayBD.setDate(null);
//        }

    }//GEN-LAST:event_ngayBDPropertyChange

    private void btnTraCuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraCuuActionPerformed
        // TODO add your handling code here:
        if (ngayBD.getDate() != null) {

            modelPC = (DefaultTableModel) TablePhanCongTC.getModel();
            modelPC.setRowCount(0);
            PhieuDatTiecCuoiDAO.getInstance().getPhanCong(ngayBD.getDate(), ngayKetThuc, modelPC);
            System.out.println(modelPC.getColumnCount());
        }

    }//GEN-LAST:event_btnTraCuuActionPerformed

    private void btnPhanCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPhanCongActionPerformed
        // TODO add your handling code here:
        int row = TablePhanCongTC.getSelectedRow();
        if (row >= 0) {
            slNhanVienDaChon = 0;
            maTiecCuoi = TablePhanCongTC.getValueAt(row, 3).toString();
            try {
                ngayDT = dateFormat.parse(TablePhanCongTC.getValueAt(row, 1).toString());
            } catch (ParseException ex) {
                Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
            }
            maCa = TablePhanCongTC.getValueAt(row, 2).toString();
            slBan = Integer.parseInt(TablePhanCongTC.getValueAt(row, 5).toString());
            pageXemPhanCong.setVisible(false);
            pagePhanCong.setVisible(true);
            lbNgayDaiTiec.setText(TablePhanCongTC.getValueAt(row, 1).toString());
            lbCa.setText(maCa);
            lbMaTC.setText(maTiecCuoi);
            lbMaSanh.setText(TablePhanCongTC.getValueAt(row, 4).toString());

            congViecs = CongViecDAO.getInstance().getCongViecPhanCong(maTiecCuoi);

            for (CongViec x : congViecs) {
                mapCongViec.put(x.getTenCongViec(), x.getMaCongViec());
                cbxCongViec.addItem(x.getTenCongViec());
            }
            employeePCs = EmployeeDAO.getInstance().getNhanVienPC(ngayDT, maCa, maTiecCuoi);
            ListMaNV.clear();
            ListMaNV_DPC.clear();
            ListMaNV_Huy.clear();
            lbSoLuongNVcan.setText(String.valueOf(slBan));
            for (EmployeePC x : employeePCs) {
                if (x.isChon()) {
                    ListMaNV_DPC.add(x.getMaNhanVien());
                }
            }
            CreateTablePC();

        }
    }//GEN-LAST:event_btnPhanCongActionPerformed

    private void cbxCongViecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCongViecActionPerformed
        // TODO add your handling code here:

        if (mapCongViec.get(cbxCongViec.getSelectedItem().toString()).equals("CVC001")) {
            lbSoLuongNVcan.setText(String.valueOf(slBan));
        } else if (mapCongViec.get(cbxCongViec.getSelectedItem().toString()).equals("CVC004")) {
            lbSoLuongNVcan.setText(String.valueOf(slBan / 5));
        } else if (mapCongViec.get(cbxCongViec.getSelectedItem().toString()).equals("CVC008")) {
            lbSoLuongNVcan.setText(String.valueOf(1));
        } else {
            lbSoLuongNVcan.setText(String.valueOf(CongViecDAO.getInstance().getSoLuongCongViec(mapCongViec.get(cbxCongViec.getSelectedItem().toString()), maTiecCuoi)));

        }
        jCheckBox1.setSelected(false);
        slNhanVienDaChon = 0;
        CreateTablePC();
    }//GEN-LAST:event_cbxCongViecActionPerformed

    private void TablePhanCongNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablePhanCongNVMouseClicked
        // TODO add your handling code here:
        int row = TablePhanCongNV.getSelectedRow();
        int col = TablePhanCongNV.getSelectedColumn();
        if (col == 6) {
            boolean chon = (boolean) TablePhanCongNV.getValueAt(row, col);
            String maNV = TablePhanCongNV.getValueAt(row, 1).toString();
            System.out.println(chon + " " + maNV);
            for (EmployeePC x : employeePCs) {
                if (x.getMaNhanVien().equals(maNV)) {
                    x.setChon(chon);
                    System.out.print(x.isChon());
                }
            }
            if (!chon) {
                if (ListMaNV_DPC.contains(maNV)) {
                    ListMaNV_Huy.add(maNV);
                } else {
                    ListMaNV.remove(maNV);
                }
                slNhanVienDaChon -= 1;

            } else {
                if (ListMaNV_DPC.contains(maNV)) {
                    ListMaNV_Huy.remove(maNV);
                } else {
                    ListMaNV.add(maNV);
                }
                slNhanVienDaChon += 1;
            }
            lbNhanVienDuocChon.setText(String.valueOf(slNhanVienDaChon));
            System.out.println("List nv:" + ListMaNV);
            System.out.println("List nvpc:" + ListMaNV_DPC);
            System.out.println("List H:" + ListMaNV_DPC);

        }
    }//GEN-LAST:event_TablePhanCongNVMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        System.out.println("Ngay chon khi thay doi jcombobox: " + strNgayCalendar);
        switch (jComboBox1.getSelectedIndex()) {
            case 0: {
                //                SetModelTable_PhanCong_Ngay();
                //                defaultTableModel_PhanCong.setRowCount(0);
                System.out.println("Ts: " + strNgayCalendar);

                CreateDataTable_PhanCong(0, strNgayCalendar);
                break;
            }
            case 1: {
                //                SetModelTable_PhanCong_Tuan(calendar.getCalendar());
                //                defaultTableModel_PhanCong.setRowCount(0);
                CreateDataTable_PhanCong(1, strNgayCalendar);
                break;
            }
            default:
                throw new AssertionError();
        }
        if (Table_PhanCong.getRowCount() == 0) {
            jScrollPane1.setVisible(false);
            jLabel20.setText("Lịch phân công trống!");
        } else {
            jScrollPane1.setVisible(true);
            jLabel20.setText("");
        }

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void calendar0AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_calendar0AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_calendar0AncestorAdded

    private void calendar0PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendar0PropertyChange
        // TODO add your handling code here:
        //        System.out.println(calendar.getDate() + " "+ (++i));
        JDateChooser dateChooser = new JDateChooser();
        dateChooser.setDate(calendar0.getDate());
        Date ngayChonn = dateChooser.getDate();
        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
//        String dateString = dateFormat.format(ngayChon);
//        Date ngayChonn = calendar.getDate();
//        this.ngayChon = calendar.getCalendar();
        strNgayCalendar = dateFormat1.format(ngayChonn);
        System.out.println("sdfsdf: " + i);
        System.out.println("Ngay chon khi thay doi jcalendar: " + strNgayCalendar);
        CreateDataTable_PhanCong(jComboBox1.getSelectedIndex(), strNgayCalendar);
        CreateDataTable_SLTiec();

        if (Table_PhanCong.getRowCount() == 0) {
            jScrollPane1.setVisible(false);
            jLabel20.setText("Lịch phân công trống!");
        } else {
            jScrollPane1.setVisible(true);
            jLabel20.setText("");
        }
        if (Table_SLTiec.getRowCount() == 0) {
            jScrollPane2.setVisible(false);
//            jLabel23.setText("NULL!");
        } else {
            jScrollPane2.setVisible(true);
            jLabel23.setText("");
        }
        CreateBarChart(ngayChonn);
    }//GEN-LAST:event_calendar0PropertyChange

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        System.out.println("Dang chọn: " + jComboBox2.getSelectedIndex());
        CreateDataTable_SLTiec();
        System.out.println("Số hàng: " + Table_SLTiec.getRowCount());
        if (Table_SLTiec.getRowCount() > 0) {
            jScrollPane2.setVisible(true);
            jScrollPane2.setVisible(true);
//            jLabel23.setText("NULL!");
        }
        else {
            jScrollPane2.setVisible(false);
            jLabel23.setText("");
        }
        //        sfgsdfg
        //        System.out.println("Ngay chon khi thay doi jcombobox: " + strNgayCalendar);
//        CreateDataTable_SLTiec();
//        if (Table_SLTiec.getRowCount() == 0) {
//            jScrollPane2.setVisible(false);
////            jLabel23.setText("NULL!");
//        } else {
//            jScrollPane2.setVisible(true);
//            jLabel23.setText("");
//        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed
        // TODO add your handling code here:
        home.setVisible(false);
        pageXemPhanCong.setVisible(true);

    }//GEN-LAST:event_jLabel11MousePressed

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
        if (!ListMaNV.isEmpty()) {
            for (String x : ListMaNV) {
                PhanCongDAO.getInstance().Insert(new PhanCong(x, maTiecCuoi));
            }
            PhieuDatTiecCuoiDAO.getInstance().UpdateTinhTrang(maTiecCuoi);
        }
        if (!ListMaNV_Huy.isEmpty()) {
            for (String x : ListMaNV_Huy) {
                PhanCongDAO.getInstance().Delete(new PhanCong(x, maTiecCuoi));
            }
        }
        jCheckBox1.setSelected(false);
        modelPC.setRowCount(0);
        PhieuDatTiecCuoiDAO.getInstance().getPhanCong(ngayBD.getDate(), ngayKetThuc, modelPC);
        pageXemPhanCong.setVisible(true);
        pagePhanCong.setVisible(false);
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
        pageXemPhanCong.setVisible(true);
        pagePhanCong.setVisible(false);
        jCheckBox1.setSelected(false);
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void exportMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exportMousePressed

        String nameSheet = "";
      

     
        String MonSun =GetMonDaySunDay();
        String[] parts = MonSun.split(" ");
        String strMonDay = parts[0];
        String strSunDay = parts[1];
        String Day_MonDay = strMonDay.substring(strSunDay.length()-2);
        String Day_SunDay = strMonDay.substring(strMonDay.length()-2);
        SimpleDateFormat inputF = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat outputF = new SimpleDateFormat("dd-MM-yyyy");
        String formattedMon = "";
        String formattedSun = "";
        try {
            Date dateMon = inputF.parse(strMonDay);
            Date dateSun = inputF.parse(strSunDay);
            formattedMon = outputF.format(dateMon);
            formattedSun = outputF.format(dateSun);
//            System.out.println(formattedDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        if(defaultTableModel_PhanCong.getColumnCount() == 5){
            
               
                nameSheet = "Danh sách phân công nhân viên ngày " + strNgayCalendar;
            
        } else{
            nameSheet = "Danh sách phân công nhân viên ngày " + formattedMon + " " + formattedSun ; 
        }
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet( strNgayCalendar);
        XSSFRow row = null;
        Cell cell = null;

        row = sheet.createRow(1);

        int columnCount = defaultTableModel_PhanCong.getColumnCount();

        for (int columnIndex = 0; columnIndex < columnCount; columnIndex++) {
            String columnName = defaultTableModel_PhanCong.getColumnName(columnIndex);
            cell = row.createCell(columnIndex, CellType.STRING);
            cell.setCellValue(columnName);
        }

        int rowCount = defaultTableModel_PhanCong.getRowCount();
        int colCount = defaultTableModel_PhanCong.getColumnCount();

        for (int i = 0; i < rowCount; i++) {

            row = sheet.createRow(2 + i);

            for (int j = 0; j < colCount; j++) {
                cell = row.createCell(j, CellType.STRING);
                cell.setCellValue(defaultTableModel_PhanCong.getValueAt(i, j).toString());

            }

        }
//        String filePath;
//
//        // Kiểm tra hệ điều hành
//        String os = System.getProperty("os.name").toLowerCase();
//        if (os.contains("win")) {
//            // Hệ điều hành Windows
//            filePath = "D:\\path_to_file.xlsx";
//        } else {
//            // Hệ điều hành macOS
//            filePath = "/Users/macbookpro/path_to_file.xlsx";
//        }

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn nơi lưu file");

        // Thiết lập filter cho file Excel
        FileNameExtensionFilter excelFilter = new FileNameExtensionFilter("Excel Files", "xlsx");
        fileChooser.setFileFilter(excelFilter);
        fileChooser.setSelectedFile(new File(nameSheet + ".xlsx"));
        // Hiển thị hộp thoại lưu file và lấy kết quả
        int userSelection = fileChooser.showSaveDialog(home);

//        File f = new File(filePath);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try {
                FileOutputStream fileOut = new FileOutputStream(fileToSave);
                workbook.write(fileOut);
                fileOut.close();
                Message("Xuất file thành công", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                Message("Xuất file thất bại", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();

            } catch (IOException ex) {
                Message("Xuất file thất bại", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();

            }
        } else if (userSelection == JFileChooser.CANCEL_OPTION) {
           
        }


    }//GEN-LAST:event_exportMousePressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        pageXemPhanCong.setVisible(false);
        home.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2PropertyChange

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        System.out.println("Dang chọn: " + jComboBox2.getSelectedIndex());
        CreateDataTable_SLTiec();
        System.out.println("Số hàng: " + Table_SLTiec.getRowCount());
        if (Table_SLTiec.getRowCount() > 0) {
            jScrollPane2.setVisible(true);
            jScrollPane2.setVisible(true);
//            jLabel23.setText("NULL!");
        }
        else {
            jScrollPane2.setVisible(false);
            jLabel23.setText("");
        }
        
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    public void CreateTablePC() {
        modelPCNV = (DefaultTableModel) TablePhanCongNV.getModel();
        modelPCNV.setRowCount(0);
        String maCV = mapCongViec.get(cbxCongViec.getSelectedItem().toString());
        int i = 0;
        for (EmployeePC x : employeePCs) {
            if (x.getMaCongViec().equals(maCV)) {
                if (x.isChon()) {
                    slNhanVienDaChon += 1;
                }
                modelPCNV.addRow(new Object[]{++i, x.getMaNhanVien(), x.getTenNhanVien(), x.getGioiTinh(), x.getLoaiNhanVien(), x.getSdt(), x.isChon()});
            }
        }
        lbNhanVienDuocChon.setText(String.valueOf(slNhanVienDaChon));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePhanCongNV;
    private javax.swing.JTable TablePhanCongTC;
    private javax.swing.JTable Table_PhanCong;
    private javax.swing.JTable Table_SLTiec;
    private javax.swing.JButton btnPhanCong;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnTraCuu;
    private javax.swing.JButton btnXacNhan;
    private com.toedter.calendar.JCalendar calendar0;
    private javax.swing.JComboBox<String> cbxCongViec;
    private javax.swing.JLabel export;
    private javax.swing.JPanel home;
    private javax.swing.JDesktopPane jBarChar;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbCa;
    private javax.swing.JLabel lbMaSanh;
    private javax.swing.JLabel lbMaTC;
    private javax.swing.JLabel lbNgayDaiTiec;
    private javax.swing.JLabel lbNhanVienDuocChon;
    private javax.swing.JLabel lbSoLuongNVcan;
    private com.toedter.calendar.JDateChooser ngayBD;
    private javax.swing.JTextField ngayKT;
    private javax.swing.JPanel pagePhanCong;
    private javax.swing.JPanel pageXemPhanCong;
    // End of variables declaration//GEN-END:variables

}
